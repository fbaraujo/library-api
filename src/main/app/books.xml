<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <flow name="get:/books:library-api-config">
        <db:select config-ref="MySQL_Configuration" doc:name="Listagem de Livros">
            <db:dynamic-query><![CDATA[SELECT * FROM books  
#[(message.inboundProperties.'http.query.params'.title != null) ? 'WHERE title LIKE "%' + message.inboundProperties.'http.query.params'.title + '%"' : '']
ORDER BY
#[(message.inboundProperties.'http.query.params'.sort != null) ? message.inboundProperties.'http.query.params'.sort : 'title']
#[(message.inboundProperties.'http.query.params'.sortDirection != null) ? message.inboundProperties.'http.query.params'.sortDirection : 'asc']
LIMIT
#[(message.inboundProperties.'http.query.params'.offset != null) ? message.inboundProperties.'http.query.params'.offset - 1 : 0],
#[(message.inboundProperties.'http.query.params'.limit != null) ? message.inboundProperties.'http.query.params'.limit : 10]]]></db:dynamic-query>

        </db:select>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <set-payload value="{ &quot;books&quot;:  #[payload] }" doc:name="Set Response Payload"/>
    </flow>

    <flow name="post:/books:application/json:library-api-config">
        <db:insert config-ref="MySQL_Configuration" doc:name="Criar Livro" autoGeneratedKeys="true">
            <db:parameterized-query><![CDATA[INSERT INTO books (title, publisher, author, isbn, category) VALUES (#[json:/title],#[json:/publisher],#[json:/author],#[json:/isbn],#[json:/category]);]]></db:parameterized-query>
        </db:insert>
        <set-property doc:name="Set Location Header" propertyName="Location" value="http://localhost:${http.port}/api/books/#[payload.get(0).get(&quot;GENERATED_KEY&quot;)]"/>
    </flow>

    <flow name="get:/books/{bookId}:library-api-config">
        <db:select config-ref="MySQL_Configuration" doc:name="Obter Livro pelo ID">
            <db:parameterized-query><![CDATA[SELECT * FROM books WHERE id = #[flowVars.bookId]]]></db:parameterized-query>

        </db:select>
        <validation:validate-size message="Livro n&#227;o encontrado" exceptionClass="org.mule.module.apikit.exception.NotFoundException" value="#[payload]" min="1" doc:name="Valida Livro Encontrado"/>
        <set-payload value="#[payload.get(0)]" doc:name="Set Response Payload"/>
    </flow>

    <flow name="put:/books/{bookId}:application/json:library-api-config">
        <db:update config-ref="MySQL_Configuration" doc:name="Atualizar Livro">
            <db:parameterized-query><![CDATA[UPDATE books SET title=#[json:/title], publisher=#[json:/publisher], author=#[json:/author], isbn=#[json:/isbn], category=#[json:/category] WHERE id=#[flowVars.bookId]]]></db:parameterized-query>
        </db:update>
        <set-property propertyName="ETag" value="#[function:uuid]" doc:name="Set ETag Header"/>
    </flow>
    
    <flow name="delete:/books/{bookId}:library-api-config">
        <db:delete config-ref="MySQL_Configuration" doc:name="Remover Livro pelo ID">
            <db:parameterized-query><![CDATA[DELETE FROM books WHERE id = #[flowVars.bookId]]]></db:parameterized-query>
        </db:delete>
        <validation:is-true message="Livro n&#227;o encontrado" exceptionClass="org.mule.module.apikit.exception.NotFoundException" expression="#[payload != false]" doc:name="Valida Exclus&#227;o"/>
    </flow>

</mule>
